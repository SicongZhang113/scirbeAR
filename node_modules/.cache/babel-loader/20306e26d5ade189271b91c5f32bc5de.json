{"ast":null,"code":"var _jsxFileName = \"/Users/liuxinyu/Desktop/ScribeAR.github.io/src/components/TopSpace/Options/Micvisual/index.js\";\nimport React from 'react';\nimport './index.css';\nimport {\n/*useSelector, */\nuseDispatch } from 'react-redux'; // This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function Micvisual(props) {\n  //const setting = useSelector(props.setting)\n  // useDispatch returns the state modifying function, invoked below.\n  const dispatch = useDispatch();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.setting ? \"Get Mic Input\" : \"Stop\", React.createElement(\"div\", {\n    className: \"record-btn-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: setting ? \"record-btn hidden\" : \"record-btn shown\",\n    onClick: () => dispatch(flip_recording()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: setting ? \"stop-btn shown\" : \"stop-btn hidden\",\n    onClick: () => dispatch(flip_recording()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/liuxinyu/Desktop/ScribeAR.github.io/src/components/TopSpace/Options/Micvisual/index.js"],"names":["React","useDispatch","Micvisual","props","dispatch","setting","flip_recording"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA;AAAS;AAAiBC,WAA1B,QAA6C,aAA7C,C,CAEA;AACA;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACpC;AACA;AACA,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,SACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACME,KAAK,CAACE,OAAN,GAAe,eAAf,GAAiC,MADvC,EAEK;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAK,IAAA,SAAS,EAAEA,OAAO,GAAG,mBAAH,GAAyB,kBAAhD;AACK,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACE,cAAc,EAAf,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,EAGK;AAAK,IAAA,SAAS,EAAED,OAAO,GAAG,gBAAH,GAAsB,iBAA7C;AACK,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACE,cAAc,EAAf,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,CAFL,CADL;AAWJ","sourcesContent":["import React from 'react'\nimport './index.css'\nimport { /*useSelector, */useDispatch } from 'react-redux'\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function Micvisual(props) {\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n     const dispatch = useDispatch()\n\n     return (\n          <div>\n               {props.setting? \"Get Mic Input\" : \"Stop\"}\n               <div className=\"record-btn-wrapper\">\n                    <div className={setting ? \"record-btn hidden\" : \"record-btn shown\"}\n                         onClick={() => dispatch(flip_recording())} />\n                    <div className={setting ? \"stop-btn shown\" : \"stop-btn hidden\"}\n                         onClick={() => dispatch(flip_recording())} />\n               </div>\n          </div>\n     )\n}\n"]},"metadata":{},"sourceType":"module"}