{"ast":null,"code":"var _jsxFileName = \"/Users/liuxinyu/Desktop/ScribeAR.github.io/src/components/TopSpace/Options/Micvisual/index.js\";\nimport React from 'react';\nimport './index.css';\nimport {\n/*useSelector, */\nuseDispatch } from 'react-redux'; // This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function Micvisual(props) {\n  //const setting = useSelector(props.setting)\n  // useDispatch returns the state modifying function, invoked below.\n  const dispatch = useDispatch();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.item, React.createElement(\"button\", {\n    className: \"MicButtom\",\n    onClick: () => dispatch(props.increment()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Get mic\"));\n}","map":{"version":3,"sources":["/Users/liuxinyu/Desktop/ScribeAR.github.io/src/components/TopSpace/Options/Micvisual/index.js"],"names":["React","useDispatch","Micvisual","props","dispatch","item","increment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA;AAAS;AAAiBC,WAA1B,QAA6C,aAA7C,C,CAEA;AACA;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACpC;AACA;AACA,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,SACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACME,KAAK,CAACE,IADZ,EAEK;AAAQ,IAAA,SAAS,EAAC,WAAlB;AACE,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACD,KAAK,CAACG,SAAN,EAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFL,CADL;AAOJ","sourcesContent":["import React from 'react'\nimport './index.css'\nimport { /*useSelector, */useDispatch } from 'react-redux'\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function Micvisual(props) {\n     //const setting = useSelector(props.setting)\n     // useDispatch returns the state modifying function, invoked below.\n     const dispatch = useDispatch()\n\n     return (\n          <div>\n               {props.item}\n               <button className=\"MicButtom\"\n                 onClick={() => dispatch(props.increment())}>Get mic</button>\n          </div>\n     )\n}\n"]},"metadata":{},"sourceType":"module"}