{"ast":null,"code":"var _jsxFileName = \"/Users/sicongzhang/Documents/ScribeAR/ver3_5/src/components/MiddleSpace/Loudness/index.js\";\nimport React, { Component } from 'react';\nimport AudioAnalyser from './AudioAnalyser';\nimport { useSelector, useDispatch } from 'react-redux';\nexport default function Index() {\n  const setting = useSelector(state => state.mic); // class Index extends Component {\n  //   constructor(props) {\n  //    super(props);\n  //    this.state = {\n  //      audio: null\n  //    };\n  //\n  //   this.toggleMicrophone = this.toggleMicrophone.bind(this);\n  //  }\n  //\n  //  async getMicrophone() {\n  //     const audio = await navigator.mediaDevices.getUserMedia({\n  //       audio: true,\n  //       video: false\n  //     });\n  //     this.setState({ audio });\n  //   }\n  //\n  //   stopMicrophone() {\n  //      this.state.audio.getTracks().forEach(track => track.stop());\n  //      this.setState({ audio: null });\n  //    }\n  //\n  //    toggleMicrophone() {\n  //     if (this.state.audio) {\n  //       this.stopMicrophone();\n  //     } else {\n  //       this.getMicrophone();\n  //     }\n  //   }\n  // render() {\n  //    return (\n  //\n  //        <div className=\"controls\" style = {{height:\"100%\",width:\"100%\"}}>\n  //          {this.state.audio ? <AudioAnalyser audio={this.state.audio} /> : ''}\n  //        </div>\n  //\n  //    );\n  //  }\n\n  return React.createElement(\"div\", {\n    className: \"controls\",\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: this.toggleMicrophone,\n    style: {\n      position: \"fixed\",\n      top: \"35vh\",\n      left: \"65vw\",\n      width: \"10vw\",\n      height: \"10vh\",\n      fontSize: \"1.5vw\",\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, this.state.audio ? 'Stop MIC' : 'Get MIC input'), this.state.audio ? React.createElement(AudioAnalyser, {\n    audio: setting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }) : '');\n} //export default Index;","map":{"version":3,"sources":["/Users/sicongzhang/Documents/ScribeAR/ver3_5/src/components/MiddleSpace/Loudness/index.js"],"names":["React","Component","AudioAnalyser","useSelector","useDispatch","Index","setting","state","mic","height","width","toggleMicrophone","position","top","left","fontSize","textAlign","audio"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAMC,OAAO,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,GAAlB,CAA3B,CAD8B,CAMhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEG,SAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAI;AAACC,MAAAA,MAAM,EAAC,MAAR;AAAeC,MAAAA,KAAK,EAAC;AAArB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,KAAKC,gBAAtB;AAAwC,IAAA,KAAK,EAAI;AAC/CC,MAAAA,QAAQ,EAAC,OADsC;AAE/CC,MAAAA,GAAG,EAAC,MAF2C;AAG/CC,MAAAA,IAAI,EAAC,MAH0C;AAI/CJ,MAAAA,KAAK,EAAC,MAJyC;AAK/CD,MAAAA,MAAM,EAAC,MALwC;AAM/CM,MAAAA,QAAQ,EAAE,OANqC;AAO/CC,MAAAA,SAAS,EAAE;AAPoC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASG,KAAKT,KAAL,CAAWU,KAAX,GAAmB,UAAnB,GAAgC,eATnC,CADF,EAYG,KAAKV,KAAL,CAAWU,KAAX,GAAmB,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEX,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAAuD,EAZ1D,CAFJ;AAoBJ,C,CAED","sourcesContent":["import React, { Component } from 'react';\nimport AudioAnalyser from './AudioAnalyser';\nimport { useSelector, useDispatch } from 'react-redux'\n\nexport default function Index() {\n  const setting = useSelector((state) => state.mic)\n\n\n\n\n// class Index extends Component {\n//   constructor(props) {\n//    super(props);\n//    this.state = {\n//      audio: null\n//    };\n//\n//   this.toggleMicrophone = this.toggleMicrophone.bind(this);\n//  }\n//\n//  async getMicrophone() {\n//     const audio = await navigator.mediaDevices.getUserMedia({\n//       audio: true,\n//       video: false\n//     });\n//     this.setState({ audio });\n//   }\n//\n//   stopMicrophone() {\n//      this.state.audio.getTracks().forEach(track => track.stop());\n//      this.setState({ audio: null });\n//    }\n//\n//    toggleMicrophone() {\n//     if (this.state.audio) {\n//       this.stopMicrophone();\n//     } else {\n//       this.getMicrophone();\n//     }\n//   }\n\n\n  // render() {\n  //    return (\n  //\n  //        <div className=\"controls\" style = {{height:\"100%\",width:\"100%\"}}>\n  //          {this.state.audio ? <AudioAnalyser audio={this.state.audio} /> : ''}\n  //        </div>\n  //\n  //    );\n  //  }\n\n     return (\n\n         <div className=\"controls\" style = {{height:\"100%\",width:\"100%\"}}>\n           <button onClick={this.toggleMicrophone} style = {{\n             position:\"fixed\",\n             top:\"35vh\",\n             left:\"65vw\",\n             width:\"10vw\",\n             height:\"10vh\",\n             fontSize: \"1.5vw\",\n             textAlign: \"left\"\n           }}>\n             {this.state.audio ? 'Stop MIC' : 'Get MIC input'}\n           </button>\n           {this.state.audio ? <AudioAnalyser audio={setting} /> : ''}\n\n         </div>\n\n     );\n\n}\n\n//export default Index;\n"]},"metadata":{},"sourceType":"module"}